import java.util.ArrayList;
import java.util.HashSet;
import java.util.HashMap;

aspect Collections {

	syn HashMap<String, Value> DebuggerConfig.configs(){
		HashMap<String, Value> map = new HashMap();
		if(!hasConfig() || !getConfig().hasConfigBlock() || !getConfig().getConfigBlock().isBindingList())
			return map;
		for(Binding b : ((BindingList) getConfig().getConfigBlock()).getBindingList()){
			map.put(b.getName().print(), b.getValue());
		}
		return map;
	}

    coll ArrayList<IdDecl> DebuggerConfig.IdDecls() [new ArrayList<IdDecl> ()] with add root DebuggerConfig;

	IdDecl contributes this
		to DebuggerConfig.IdDecls()
		for debuggerConfig ();
	coll HashSet DebuggerConfig.nodes() [new HashSet()] with add root DebuggerConfig;
	NodeConfig contributes this to DebuggerConfig.nodes() for debuggerConfig();

	syn HashMap<String, NodeConfig> DebuggerConfig.getNodes(){
		HashMap<String, NodeConfig> map = new HashMap();
		for(NodeConfig node : ((HashSet<NodeConfig>) nodes()))
			map.put(node.getNodeName().print(), node);
		return map;
	}



}

