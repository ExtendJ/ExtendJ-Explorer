import java.util.Set;
import java.util.TreeSet;

aspect Errors {
	public class ErrorMessage implements Comparable<ErrorMessage> {
		protected final String message;
		protected final int lineNumber;
		public ErrorMessage(String message, int lineNumber) {
			this.message = message;
			this.lineNumber = lineNumber;
		}
		public int compareTo(ErrorMessage other) {
			if (lineNumber == other.lineNumber) {
				return message.compareTo(other.message);
			}
			return Integer.compare(lineNumber, other.lineNumber);
		}
		public String toString() {
			return "Error at line " + lineNumber + ": " + message;
		}
	}
	protected ErrorMessage ASTNode.error(String message) {
		return new ErrorMessage(message, getLine(getStart()));
	}

	coll Set<ErrorMessage> DebuggerConfig.errors() [new TreeSet<ErrorMessage>()] with add root DebuggerConfig;

	syn DebuggerConfig DebuggerConfig.debuggerConfig() = this;
	eq DebuggerConfig.getChild().debuggerConfig() = this;
	inh DebuggerConfig ASTNode.debuggerConfig();

}


aspect ErrorContributions {
    // Multiple when-, show- och style.
	Node contributes error("Node :" + getClassName().getID() + " in filter " + getFilter().getFilterName().getID() + " has multiple when blocks declared.")
		when isMultipleWhen()
		to DebuggerConfig.errors()
		for debuggerConfig();

	Node contributes error("Node :" + getClassName().getID() + " in filter " + getFilter().getFilterName().getID() + " has multiple show blocks declared.")
		when isMultipleShow()
		to DebuggerConfig.errors()
		for debuggerConfig();

	Node contributes error("Node :" + getClassName().getID() + " in filter " + getFilter().getFilterName().getID() + " has multiple style blocks declared.")
		when isMultipleStyle()
		to DebuggerConfig.errors()
		for debuggerConfig();

    // Node multiple declared
	Node contributes error("Node :" + getClassName().getID() + " in filter " + getFilter().getFilterName().getID() + " is already declared in this filter.")
		when isMultipleDeclared()
		to DebuggerConfig.errors()
		for debuggerConfig();

    // Filter multiple declared
	Filter contributes error("Filter " + getFilterName().getID() + " is already declared.")
		when isMultipleDeclared()
		to DebuggerConfig.errors()
		for debuggerConfig();

	// Use unknown filter
	Use contributes error("Unknown filters: " + getUnknownFilterNames())
		when hasUnKnownFilters()
		to DebuggerConfig.errors()
		for debuggerConfig();

	// Use multiple of the same filter
	Use contributes error("Multiple usages of the same filter(s):" + getMultipleEnabledFilterNames())
		when hasMultipleEnabledFilters()
		to DebuggerConfig.errors()
		for debuggerConfig();
}
