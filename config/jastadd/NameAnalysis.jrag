aspect NameAnalysis {
    syn Filter Filter.getFilter() = this;
    eq Filter.getNodes(int i).getFilter() = this;
    inh Filter Node.getFilter();

// multiple declared when-, show- and style blocks.
    syn boolean Node.isMultipleWhen(){
        int count = 0;
        for(NodeConfig config : getNodeConfigs()){
            count += config.isWhen() ? 1 : 0;
        }
        return count > 1;
    }

    syn boolean Node.isMultipleShow(){
        int count = 0;
        for(NodeConfig config : getNodeConfigs()){
            count += config.isShow() ? 1 : 0;
        }
        return count > 1;
    }

    syn boolean Node.isMultipleStyle(){
        int count = 0;
        for(NodeConfig config : getNodeConfigs()){
            count += config.isStyle() ? 1 : 0;
        }
        return count > 1;
    }

    // Node is multiple declared
    eq Filter.getNodes(int i).isDeclared(Node node) = exists(node, i);
    private boolean Filter.exists(Node node, int until){
        for (int i = 0; i < until; i++) {
            Node child = getNodes(i);
            boolean sameName = child.getClassName().getID().equals(node.getClassName().getID());
            if(sameName)
                return true;
        }
        return false;
    }
    syn boolean Node.isMultipleDeclared() = isDeclared(this);
    inh boolean Node.isDeclared(Node node);

    // filter is multiple declared
    eq DebuggerConfig.getFilter(int i).isDeclared(Filter filter) = exists(filter.getFilterName().getID(), i);

    public boolean DebuggerConfig.exists(String filterName, int until){
        for (int i = 0; i < until; i++) {
            Filter child = getFilter(i);
            boolean sameName = child.getFilterName().getID().equals(filterName);
            if(sameName)
                return true;
        }
        return false;
    }

    syn boolean Filter.isMultipleDeclared() = isDeclared(this);
    inh boolean Filter.isDeclared(Filter filter);

    syn String Use.getUnknownFilterNames(){
        String s = "";
        for(IdDecl decl : getIdDecls()){
            if(!debuggerConfig().exists(decl.getID(), debuggerConfig().getNumFilter())){
                if(!s.equals(""))
                    s += ", ";
                s += decl.getID();
            }
        }
        return s;
    }

    syn boolean Use.hasUnKnownFilters(){
        if(!debuggerConfig().hasFilter())
            return true;
        for(IdDecl decl : getIdDecls()){
            if(!debuggerConfig().exists(decl.getID(), debuggerConfig().getNumFilter()))
                return true;
        }
        return false;
    }

    syn String Use.getMultipleEnabledFilterNames(){
        HashSet<String> a = new HashSet();
        String s = "";
        for(IdDecl decl : getIdDecls()){
            if(a.contains(decl.getID())){
                if(!s.equals(""))
                    s += ", ";
                s += decl.getID();
            }
            a.add(decl.getID());
        }
        return s;
    }

    syn boolean Use.hasMultipleEnabledFilters(){
        HashSet<String> a = new HashSet();
        for(IdDecl decl : getIdDecls()){
            if(a.contains(decl.getID()))
                return true;
            a.add(decl.getID());
        }
        return false;
    }

}

