aspect NameAnalysis {

    // is alone
    eq DebuggerConfig.getInclude().isDeclared(NodeConfig node) = exists(node, getNumInclude()-1);

    syn boolean DebuggerConfig.exists(NodeConfig node, int until) {
        for (int i = 0; i < until; i++) {
            NodeConfig child = getInclude(i);
            if(child != node){
                String childName = child.getNodeName().getClassName().getID();
                if(child.getNodeName().hasName())
                    childName += child.getNodeName().getName().getID();

                String nodeName = node.getNodeName().getClassName().getID();
                if(node.getNodeName().hasName())
                    nodeName += node.getNodeName().getName().getID();

                if(nodeName.equals(childName))
                    return false;
            }
        }
        return true;
    }

    syn boolean NodeConfig.multipleDeclared() = !isDeclared(this);
    inh boolean NodeConfig.isDeclared(NodeConfig node);

    // is idIdDecl
    syn boolean Value.isIdDecl() = false;
    eq IdDecl.isIdDecl() = true;

    // is array
    syn boolean Value.isArray() = false;
    eq StrArray.isArray() = true;
    eq NumArray.isArray() = true;

    // is type
    syn boolean Value.isBool() = false;
    syn boolean Value.isInt() = false;
    syn boolean Value.isString() = false;
    syn boolean Value.isStrArray() = false;
    syn boolean Value.isIntArray() = false;

    eq Bool.isBool() = true;
    eq Num.isInt() = true;
    eq Str.isString() = true;
    eq StrArray.isStrArray() = true;
    eq NumArray.isIntArray() = true;


}
