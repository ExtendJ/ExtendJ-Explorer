aspect NameAnalysis {

    /*eq Include.exists(NodeConfig node){
        int until = getNodeConfigList().getNumNodeConfig()-1;

        for (int i = 0; i < until; i++) {
            NodeConfig child = getNodeConfigList().getNodeConfig(i);
            if(child != node){
                String childName = child.getNodeName().getClassName().getID();
                if(child.getNodeName().hasName())
                    childName += child.getNodeName().getName().getID();

                String nodeName = node.getNodeName().getClassName().getID();
                if(node.getNodeName().hasName())
                    nodeName += node.getNodeName().getName().getID();

                if(nodeName.equals(childName))
                    return false;
            }
        }
        return true;
    }*/
    //syn boolean NodeConfig.multipleDeclared() = !isDeclared(this);
    //inh boolean NodeConfig.isDeclared(NodeConfig node);

    // is LangDecl
    syn boolean Value.isLangDecl() = false;
    eq LangDecl.isLangDecl() = true;

    // is array
    syn boolean Value.isArray() = false;
    eq StrArray.isArray() = true;
    eq NumArray.isArray() = true;

    // is type
    syn boolean Value.isBool() = false;
    syn boolean Value.isInt() = false;
    syn boolean Value.isString() = false;
    syn boolean Value.isStrArray() = false;
    syn boolean Value.isIntArray() = false;

    eq Bool.isBool() = true;
    eq Num.isInt() = true;
    eq Str.isString() = true;
    eq StrArray.isStrArray() = true;
    eq NumArray.isIntArray() = true;

    // is When, style, show
	syn boolean NodeConfig.isWhen() = false;
	syn boolean NodeConfig.isStyle() = false;
	syn boolean NodeConfig.isShow() = false;

	eq When.isWhen() = true;
	eq Style.isStyle() = true;
	eq Show.isShow() = true;
}
