DebuggerConfig ::= FilterConfig Filter*;

FilterConfig ::= [Use] Binding*;
Filter ::= IdDecl Node*;

Node ::= ClassName:LangDecl NodeConfig*;

NodeConfig ::= Name:IdDecl NodeConfigBlock;

abstract NodeConfigBlock;
When : NodeConfigBlock ::= Expr*;
Style : NodeConfigBlock ::= Binding*;
Show : NodeConfigBlock ::= LangDecl*;

/*Stand alone expr, cause reasons*/
Use ::= IdDecl*;

Binding ::= Name:IdDecl Value;

abstract Expr;
ChildOf : Expr ::= [Not:Bool] LangDecl;
ParentOf : Expr ::= [Not:Bool] LangDecl;

abstract BinExpr : Expr ::= Left:Value Right:Value;
In : BinExpr;
NotIn : BinExpr;
EQ : BinExpr;
LT : BinExpr;
GT : BinExpr;
NEQ : BinExpr;
LEQ : BinExpr;
GEQ : BinExpr;

abstract Value;
Num : Value ::= <NUMERAL>;
Str : Value ::= <String>;
Color : Value ::= <Color>;
StrArray : Value ::= Str*;
NumArray : Value ::= Num*;
EmptyArray : Value;
IdDecl : Value ::= <ID:String>;
LangDecl : Value ::= <ID:String>;
abstract Boolean : Value;
Bool : Boolean ::= <BOOL>;
OnOff : Boolean ::= <ONOFF>;
